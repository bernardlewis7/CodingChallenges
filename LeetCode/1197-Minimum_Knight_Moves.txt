/*
*	Q. In an infinite chess board with coordinates from -infinity to +infinity, you have a knight at square [0, 0].
*   A knight has 8 possible moves it can make, as illustrated below. Each move is two squares in a cardinal direction, 
*	then one square in an orthogonal direction.
*
*	Example:
*
*	Input: x = 2, y = 1
*	Output: 1
*	Explanation: [0, 0] → [2, 1]
*
*	Input: x = 5, y = 5
*	Output: 4
*	Explanation: [0, 0] → [2, 1] → [4, 2] → [3, 4] → [5, 5]	
*
*
*/





class Solution {
public:
    int mat[301][301];
    int minKnightMoves(int x, int y) {
        
        for(int i=0;i<=300;i++)
            for(int j=0;j<=300;j++)
                mat[i][j]=-1;
        
        mat[0][0]=0;
        mat[0][1]=3;
        mat[0][2]=2;
        mat[1][0]=3;
        mat[1][1]=4;
        mat[1][2]=1;
        mat[2][0]=2;
        mat[2][1]=1;
        mat[2][2]=4;

        
       
         findmin(abs(x),abs(y));
        
        return mat[abs(x)][abs(y)];
        
    }
    
    int findmin(int x,int y){
       
        
        if(mat[x][y]!=-1){
            return mat[x][y];
        }
        else{
            mat[x][y]=1+min(findmin(abs(x-1),abs(y-2)),findmin(abs(x-2),abs(y-1)));
            return mat[x][y];
        }
        
        return 0;
        
    }
};